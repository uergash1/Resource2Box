<search_results><query id="7152">haskell hash string</query><engine status="OK" timestamp="2014-04-25 10:30:25" name="BigWeb" id="FW14-e200"/><snippets><snippet id="FW14-e200-7152-01"><link cache="FW14-topics-docs/e200/7152_01.html" timestamp="2014-04-25 10:31:05">http://cvs.haskell.org/Hugs/pages/libraries/base/Data-HashTable.html</link><title>Data . HashTable - Haskell</title><description>libraries@haskell.org: Contents: Basic hash table operations Converting to and from lists Hash functions ... String-&gt; Int32: A sample hash function for Strings. The implementation is: hashString = fromIntegral . foldr f 0 where f c m = ord c + ...</description><thumb cache="FW14-topics-docs/e056/7152_01_thumb.gif">https://icons.duckduckgo.com/i/cvs.haskell.org.ico</thumb></snippet><snippet id="FW14-e200-7152-02"><link cache="FW14-topics-docs/e200/7152_02.html" timestamp="2014-04-25 10:31:45">http://stackoverflow.com/questions/7970402/haskell-hash-table</link><title>Haskell Hash table - Stack Overflow</title><description>I am trying to build a smallish haskell app that will translate a few key phrases from english to french. First, i have a list of ordered pairs of strings that represent and english word/phrase fo...</description><thumb cache="FW14-topics-docs/e056/7152_02_thumb.ico">https://icons.duckduckgo.com/i/stackoverflow.com.ico</thumb></snippet><snippet id="FW14-e200-7152-03"><link cache="FW14-topics-docs/e200/7152_03.html" timestamp="2014-04-25 10:32:32">http://nellardo.com/lang/haskell/hash/design/notes.html</link><title>HaSh \-- the HAskell SHell - www.nellardo.com - brook conner</title><description>HaSh \-- the HAskell SHell. This page is my rough notes on what would be involved in a Haskell shell. I make no claims for any code, or that any of the concepts are in any way final, good, etc.</description><thumb cache="FW14-topics-docs/e056/7152_03_thumb.gif">https://icons.duckduckgo.com/i/nellardo.com.ico</thumb></snippet><snippet id="FW14-e200-7152-04"><link cache="FW14-topics-docs/e200/7152_04.html" timestamp="2014-04-25 10:32:59">http://haskell.zcourts.com/ffi/2014/01/19/haskell-foerign-function-interface-murmurhash3/</link><title>DiSh (DIgest | HaSH) : Hash functions for Haskell \- Haskell ...</title><description>Introduces the dish hash function library ... Our C function accepts a pointer to an array of unsigned ints. In haskell of course we'd use a list of ints importantly though, we're accepting native Haskell types, String and Int instead of CString or CInt.</description><thumb cache="FW14-topics-docs/e056/7152_04_thumb.gif">https://icons.duckduckgo.com/i/haskell.zcourts.com.ico</thumb></snippet><snippet id="FW14-e200-7152-05"><link>http://www.haskell.org/ghc/docs/latest/html/libraries/base/Data-HashTable.html</link><title>Data.HashTable - HaskellWiki</title><description>Safe Haskell: Trustworthy: Data.HashTable. Contents. Basic hash table operations Converting to and from lists Hash functions Diagnostics Description. ... A sample hash function for Strings. We keep multiplying by the golden ratio and adding.</description><thumb cache="FW14-topics-docs/e056/7152_05_thumb.ico">https://icons.duckduckgo.com/i/www.haskell.org.ico</thumb></snippet><snippet id="FW14-e200-7152-06"><link cache="FW14-topics-docs/e200/7152_06.html" timestamp="2014-04-25 10:34:27">http://pleac.sourceforge.net/pleac_haskell-on-steroids/hashes.html</link><title>Hashes - SourceForge</title><description>Retrieving from a Hash in Insertion Order. Hashes with Multiple Values Per Key. ... haskell handles any kind of object for key-ing-- TODO 5.13 AFAIK, ... AssocDefault String Int count = ["toto", "toto", "toto", "tata", "tata", "tutu"]. foldl (\ a s -&gt; a. update s ...</description><thumb cache="FW14-topics-docs/e056/7152_06_thumb.ico">https://icons.duckduckgo.com/i/pleac.sourceforge.net.ico</thumb></snippet><snippet id="FW14-e200-7152-07"><link cache="FW14-topics-docs/e200/7152_07.html" timestamp="2014-04-25 10:35:03">http://hackage.haskell.org/package/cryptohash</link><title>Hackage: cryptohash: collection of crypto hashes, fast, pure ...</title><description>The implementations are made in C with a haskell FFI wrapper that hide the C implementation. Simple examples using the unified API: import Crypto.Hash sha1 :: ByteString -&gt; Digest SHA1 sha1 = hash hexSha3_512 :: ByteString -&gt; String hexSha3_512 bs = show ...</description><thumb cache="FW14-topics-docs/e056/7152_07_thumb.ico">https://icons.duckduckgo.com/i/hackage.haskell.org.ico</thumb></snippet><snippet id="FW14-e200-7152-08"><link cache="FW14-topics-docs/e200/7152_08.html" timestamp="2014-04-25 10:35:32">https://groups.google.com/forum/#!topic/comp.lang.functional/_RGoYHD2Kpg</link><title>F# vs OCaml vs Python vs Haskell: hash table performance ...</title><description>F# vs OCaml vs Python vs Haskell: hash table performance Showing 1-109 of 109 messages. F# vs OCaml vs Python vs Haskell: hash table performance: Dr Jon D Harrop: ... but Haskell strings are &gt; also lists, which means that you can map and do other list-type things &gt; out of the box.</description><thumb cache="FW14-topics-docs/e056/7152_08_thumb.ico">https://icons.duckduckgo.com/i/groups.google.com.ico</thumb></snippet><snippet id="FW14-e200-7152-09"><link cache="FW14-topics-docs/e200/7152_09.html" timestamp="2014-04-25 10:36:00">http://www.codereviewanswers.co.uk/q/answers-calling-a-haskell-md5-hashing-function-from-c-and-returning-the-result-back-to-16243.html</link><title>Calling a Haskell MD5 hashing function from C, and returning ...</title><description>I'm starting to learn how to meld the worlds of C and Haskell. ... Hash the input string (a strict ByteString) using MD5. Convert it to a hex string (as Text) To get there, we have to do a bunch of annoying conversions.</description><thumb cache="FW14-topics-docs/e056/7152_09_thumb.ico">https://icons.duckduckgo.com/i/www.codereviewanswers.co.uk.ico</thumb></snippet><snippet id="FW14-e200-7152-10"><link cache="FW14-topics-docs/e200/7152_10.html" timestamp="2014-04-25 10:36:40">http://www.shlomifish.org/lecture/Perl/Haskell/slides/</link><title>Haskell for Perl Programmers - Shlomi Fish</title><description>List and String Manipulation Routines. 4.1. Examples; 4.2. Multi-map Function; 5. Arrays. 5.1. Histogram; 5.2. Hash; Licence. To the extent possible under law, Shlomi Fish has waived all copyright and related or neighbouring rights to Haskell for Perl Programmers. This work is published from ...</description><thumb cache="FW14-topics-docs/e056/7152_10_thumb.ico">https://icons.duckduckgo.com/i/www.shlomifish.org.ico</thumb></snippet></snippets></search_results>