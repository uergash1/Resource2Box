<?xml version='1.0' encoding='UTF-8'?>
<search_results><query id="7152">haskell hash string</query><engine status="OK" timestamp="2014-04-21 07:16:59" name="Wikibooks" id="FW14-e033"/><snippets><snippet id="FW14-e033-7152-01"><link>http://en.wikibooks.org/wiki/Haskell/Print_version</link><title>Haskell/Print version</title><description>this chapter Haskell Haskell Basics &gt;&gt; Elementary Haskell &gt;&gt; Intermediate Haskell &gt;&gt; MonadsAdvanced</description></snippet><snippet id="FW14-e033-7152-02"><link cache="FW14-topics-docs/e033/7152_02.html" timestamp="2014-04-21 07:19:09">http://en.wikibooks.org/wiki/Haskell/Performance_Introduction</link><title>Haskell/Performance Introduction</title><description>this chapter Haskell Haskell Basics &gt;&gt; Elementary Haskell &gt;&gt; Intermediate Haskell &gt;&gt; MonadsAdvanced</description></snippet><snippet id="FW14-e033-7152-03"><link cache="FW14-topics-docs/e033/7152_03.html" timestamp="2014-04-21 07:19:46">http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Longest_common_substring</link><title>Algorithm Implementation/Strings/Longest common substring</title><description>#include &lt;string&gt; using std::string; int LongestCommonSubstring(const string&amp; str1, const string&amp; str2)</description></snippet><snippet id="FW14-e033-7152-04"><link cache="FW14-topics-docs/e033/7152_04.html" timestamp="2014-04-21 07:23:12">http://en.wikibooks.org/wiki/Tcl_Programming/Print_version</link><title>Tcl Programming/Print version</title><description>{filename string} { set fp [open $filename w] if {[string index $string end]!="\n"} {append string \n}</description></snippet><snippet id="FW14-e033-7152-05"><link cache="FW14-topics-docs/e033/7152_05.html" timestamp="2014-04-21 07:24:48">http://en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Print_version</link><title>Computer Science Design Patterns/Print version</title><description>getEmployee(String direction, String division, String department, String service, String firstName, String lastName);</description></snippet><snippet id="FW14-e033-7152-06"><link cache="FW14-topics-docs/e033/7152_06.html" timestamp="2014-04-21 07:27:46">http://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/Answers</link><title>Write Yourself a Scheme in 48 Hours/Answers</title><description>parseCharacter = do try $ string "#\\\" value &lt;\- try (string "newline" &lt;|&gt; string "space") &lt;|&gt;</description></snippet><snippet id="FW14-e033-7152-07"><link cache="FW14-topics-docs/e033/7152_07.html" timestamp="2014-04-21 07:29:15">http://en.wikibooks.org/wiki/Algorithm_Implementation/Index</link><title>Algorithm Implementation/Index</title><description>No No No No No No No No No No No Hashing "Jenkins One-at-a-time hash" No No No No No No No No No Yes No</description></snippet><snippet id="FW14-e033-7152-08"><link cache="FW14-topics-docs/e033/7152_08.html" timestamp="2014-04-21 07:31:12">http://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours/LaTeX</link><title>Write Yourself a Scheme in 48 Hours/LaTeX</title><description>the Haskell \verb|String|\index{String@\texttt{String}} returned from many, we apply the String constructor</description></snippet><snippet id="FW14-e033-7152-09"><link cache="FW14-topics-docs/e033/7152_09.html" timestamp="2014-04-21 07:31:50">http://en.wikibooks.org/wiki/A-level_Computing/AQA/Print_version/Unit_2</link><title>A-level Computing/AQA/Print version/Unit 2</title><description>added to a data string and depending on that string, used for checking that the string has been sent correctly</description></snippet></snippets></search_results>