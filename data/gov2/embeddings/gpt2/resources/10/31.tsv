id	content
GX006-34-14937627	"NASA Spinoff Database  Search Tips     Top Search Tips  To search a WAIS database, type a word ( asteroid ),  a question ( What is Mission to Planet Earth? ), or a phrase  ( space station freedom ) in the search field.    Click Submit Query and a list of titles linked to abstracts will appear.    Boolean operators may be used in any type of search.  The Boolean operators are AND, OR, NOT, and ADJ.  Here are some examples of their use:         lunar AND materials finds articles containing both words.    meteor OR comet finds articles containing either word.    landings NOT lunar  finds articles containing the first word but not the second.     atmospheric ADJ turbulence   finds articles containing  atmospheric  followed        immediately by  turbulence .    trails AND (meteor OR comet)  finds articles containing the        first term in combination with the second or third term.     We recommend that search queries be entered in lowercase letters with Boolean operators in upper case..   The WAIS search engine ignores common words such  as  do  and  in  (known as  stopwords ), along with punctuation (such as  question marks and periods), and checks the remaining words against  its index of articles. The program then returns a list of articles that  are ranked according to the search engine's analysis of their relevance  to the query. The end of the list also contains a report that shows how  your query was interpreted by the search engine.     Detailed Tips about Searching    Natural Language Search  The server can be queried using natural language questions. The server does not understand the question; rather, it takes the words and phrases in the question and finds documents that have those words and phrases in them.  Tell me about topex poseidon  is an example of a natural language question.  In this example, the WAISserver would search for documents containing the words  topex  and  poseidon ; the words  me  and  about , are called  stop words  -- words so common that they occur in almost every document and so they are not used for searching a document.    Literal Strings  A literal string is a more specific kind of query that asks to find documents that contain one or more exact phrases by enclosing them in double quotation marks. For example, the query   ""computational fluid dynamics""   returns only documents that contain this exact phrase. The WAIS search engine performs a literal search exactly as if you had used the Boolean operator ADJ. Thus, the above example would yield the same results as      computational ADJ fluid ADJ dynamics  For this reason, it is best to stick to noun phrases when using literals; if your literal phrase includes stopwords, the stopwords will be ignored.     Boolean Operators  The Boolean operators, AND, OR, NOT, and ADJ aid in establishing logical relationships between concepts expressed in natural language. These operators are especially useful in narrowing down the search.   AND, &&   The AND operator is helpful in restricting a search      when a particular pair or larger group of terms is      known. For instance, when searching for documents on      the weather in Florida, a question such as  weather AND      Florida  would return only those documents that contain      both the word  weather  and the word  Florida . You can      use more than one AND in a query, e.g.   weather AND cape AND canaveral . Note that the double ampersand (&&) may be used instead of spelling out the word AND.         OR, ||    The OR operator is often used to join two different phrases of a Boolean search. A question such as       brain OR cerebellum  would search for all documents      containing either the word  brain  or the word       cerebellum , or both. You can also use more than one OR      in a query.  A natural language question is much like      having an implicit OR between the words, except that      the search engine does more work in a natural language      query to determine the relevance of words and their      relationships in a phrase.  Note that the double      vertical bars (||) may be used instead of spelling out      the word OR.         NOT   NOT is a binary operator. That is, it has to come      between two or more words or parenthesized clauses. NOT      is used to reject any documents that contain certain      words. The question  porcelain NOT ceramics  would find      all documents containing the word  porcelain , that do      not also contain the word  ceramics .  Be careful not to limit your search too      much with the NOT operator. Make sure that you know      what you're throwing away.        Don't be afraid to use NOT!  One good search strategy is to search for a broadly occurring term and get lots of documents you don't want, and then to use NOT to filter out the bad documents.  For example, if you're trying to test airfoils, you might search for  airfoils  and find lots of references. You then can search for  airfoils NOT wings NOT flaps , and you might find more interesting articles that eventually lead you to your goal. Another handy trick is to use NOT to break the 40 barrier. Typical WAIS clients only display 40 documents, but if you use NOT wisely, you can flush out the documents you don't like in those 40 and progressively refine your search, adding better and better documents to the 40 that you see.   ADJ   The adjacent operator, ADJ, is used to ensure that one      word is followed by another in the returned document,      with no other words in between. For example,  dwarf      ADJ novae  returns only documents containing       dwarf novae  and ignores documents that only      contain one of the words or that contain both but not      adjacent to one another. ADJ will nonetheless work when      stopwords interrupt two words; for example, the      preceding example will find occurrences of  dwarf by novae . Note that the ADJ operator yields the      same results as does a literal query. Also note that      ADJ, unlike AND, OR, and NOT, is not a commutative      property -  dwarf ADJ novae  does not work the      same as  novae ADJ dwarf .        Mixing Natural Language, Literals, And Booleans  The ability to mix natural language, literals, and Boolean operators is unique to the WAISserver search engine. Combining natural language and Boolean operators enables end users to better target their searches. For example, suppose you were looking for documents specifically on digital computers that are not made by Honeywell Corporation. The question could then be  Tell me about digital computers NOT honeywell .    Fielded Search/Searching E-Mail Messages  For data sets whose documents have special data fields, selected portions of the documents can be tagged by the WAIS parser as fields. A client can then ask a WAISserver to limit its search to those documents containing a user-specified value of a particular field. This is called a fielded search.  The mail or e-mail parse format is an example of a parse format in which fields are tagged. For this parse format, the WAIS parser detects the  to  and  cc  fields, the  from  and  sender  fields, the  subject  field, and the  date  field. An example of a question using natural language, a boolean operator, and fielded search is  company picnic AND from=barbara . The WAIS server would then find e-mail messages about a company picnic that Barbara sent.    Date and Numeric Ranges  For a date or numeric field, a range may be specified using the syntax   field-name comparison-operator  value  where comparison-operator may be one of > (greater than), < (less than), >= (greater than or equal to), <= (less than or equal to), or = (equal to).  Currently, dates with the following formats are supported:     m-d-yy     m-d-yyyy     mm-dd-yy                m/d/yy     mm/dd/yy     m.d.yy                today      yesterday  Only positive integers are supported for numeric fields. If the comparison operator is =, then the range may be specified using the word TO, as in    date = 4/15/93 TO 4/14/94  Both ends of the range are inclusively specified.    Right Truncation (Wildcards)  A user can specify right truncation by ending a word with the asterisk (*) wild card character.  This tells the search engine to search on words whose first several characters match the base characters before the *.  For example, you might use right truncation in a question such as meteor*, which may retrieve documents containing the words  meteor, meteors, meteorite, meteoric, meteoroid, etc.      Grouping Search Terms/E-Mail Applications  A user can group search terms and phrases together using parentheses.  For example, if you wish to search for information about snowstorms, tornadoes, or hurricanes in New York City, you might search for (snowstorms OR tornadoes OR hurricanes) AND (New ADJ York ADJ City) . You can also nest your parentheses; for example,  from = ( (ben ADJ wais) OR (brewster ADJ think) )  searches for messages from either ben@wais.com or brewster@think.com.  When you are using several Boolean operators, you should always group, to disambiguate how the operators are to be applied.    Relevance Ranking  Each document is scored based on its relevance to a users question, where the most relevant document has the highest score, or rank -- 1000 being the highest, 1 being the lowest. A document receives a higher score if the words in the question are in the headline, if the words appear many times, or if phrases occur as they do in the question. A document's score is derived using techniques such as word weighting, term weighting, proximity relationships, and word density. These scoring techniques are outlined below.    Proximity Relationships  Proximity relationship scoring specifies that if the words in a natural language question are located close together in a document; they are given a higher weight than those found further apart. The idea behind a proximity relationship is that if a document contains a phrase similar to one in the user's question, that document is more likely to be relevant.    Special Characters  The WAISserver was originally designed to be as general as possible and, in this spirit, it ignores all characters in a document that are not either an alphabetical letter or a number.  In fact, non-alphanumeric characters usually separate words for the parser. For example,  F.Y.I.  parses out to three words.  This rule also applies to queries used to search a directory of servers.     Query Report  A query report is a document created by the WAISserver program that describes how an end users question is parsed by the server. When a client process sends a query, the server creates and returns a query report to the client. The query report is the last document in the relevance-ranked list of documents returned by the server. The headline of the query report is listed as  Query Report for this Search , and its relevance score is 1. Since the query report is an actual document, it may be retrieved for viewing by the client.     The query report contains the following information:       The database being questioned.    The original question.    The Boolean equivalent of the question in infix     notation. This notation is a fully-parenthesized     version of the question, showing the Boolean operator     precedence.    The Boolean equivalent of the question displayed as a     tree.    The number of documents and the number of words in the     database.    The number of unique words in the database.    The number of times each word in the question occurred     in the database.    The expanded search words resulting from right     truncation.    The number of documents found that satisfied the     question.    The amount of time it took to perform the     search.     The purpose of this information is to give the user feedback on how the question was interpreted by the server and on how well the information in the database matched the words in the question.        NASA CASI Technology Transfer Office: Jutta Schmidt, Manager.    E-mail:  jschmidt@sti.nasa.gov   Responsible NASA official: Lynn Heimerl, NASA STI Program Office    E-mail:  help@sti.nasa.gov        Last Revised: August 20, 1996"
GX006-29-12910029	"Search                  Help       More                  Search Options     Search                         Ask                  an Energy Expert                                                                                                                                                                                                                                                                                 More Search Options                                                                                                                                Search the Golden Field Office Site                                                                                                                        Search the Energy Efficiency and Renewable Energy Site                                                                                                                                                                                                                                                    Quick Search Tips:               It's easy to search with The Golden Field Office.                Just type in a few words or phrases. Try to use discriminating terms                that are likely to be found only in the documents you seek. The                more words you give, the better results you'll get. Here are some                examples:               Search by typing words and phrases.                               Pentium computer with 8x CD-ROM for sale                             The Golden Field Office search engine will find documents containing                as many of these words and phrases as possible, ranked so that the                documents most relevant to your query are presented first. Don't                worry about missing a document because it doesn't have one of the                words in your search -- the Golden Field Office search engine returns                relevant results even if they don't contain all query terms. Identify                phrases with quotation marks, separated with commas.                               Pentium computer with ""8x CD-ROM"", ""for sale""                                                              A phrase is entered using double quotation marks, and only matches                those words which appear adjacent to each other. Separate multiple                phrases or proper names with a comma. Use UPPER case to indicate                exact match.                               Steve Jobs, NeXT                             The Golden Field Office search engine automatically treats adjacent                capitalized words as a single phrase. Search terms in lowercase                will match words in any case, otherwise, an exact case match is                used. For example, next will find matches for Next, next, and NeXT,                whereas a query for NeXT will only match NeXT.                                                         Webmaster  |  Security          & Privacy  |  EERE Home   U.S. Department of Energy         Content Last Updated: 09/25/2003"
GX035-20-7405363	BandI Business and Industry Guaranteed Loan Program.  Underlined words within the definition are linked to their own glossary entry.  Bolded words indicate a variation of that term found within the glossary. Use your browser's BACK button to return to more search results.   Conduct a  new search   HOME to  agriculture.house.gov   BandI BandI BandI BandI BandI BandI BandI BandI BandI BandI BandI BandI BandI
GX007-30-8374534	"Search                  Help       More                  Search Options     Search                         Ask                  an Energy Expert                                                                                                                                                                                                               Search                Help                                                                                                                                         Using                Symbols                                                 Symbol                           Example                             Search Results                                                 none                           solar energy                             Finds results that contain either or both                of these words.                                                                 quotes                           ""solar energy""                           Finds results that contain this                phrase.                                                                                             plus signs                           +biomass +gasification                           Finds results that contain both                these words.                                                                                 minus sign                           lighting -daylighting                           Finds results that contain the                word lighting but not the word daylighting.                                                                                                                                        Other                Techniques                                                 Symbol                           Example                             Search Results                                                 word variations                           truck                             Finds results that contain the words truck,                trucks, trucking, trucked, etc.                                                                 lower case words                           wind                           Finds results that contain the words wind,                Wind, WIND, etc.                Use lower case to find words with and without capital letters.                                                               capital letters                           WIND              Wind                           Finds results that contain these capitalized                words.                Use capital letters only if you want exact matches on words, for                example, names of people, places, or organizations.                                                                 title:                           title:geothermal                             Finds results that                contain this word in the document title.                                                                 title: and quotes                           title:""fuel cells""                             Finds results that contain this phrase in                the document title.                                                        Webmaster  |  Security          & Privacy  |  GO Home  |  EERE          Home   U.S. Department of Energy         Content Last Updated: 10/14/2003"
GX001-35-5581811	"Tips for Searching      Use * or ? to look for words with the same prefix . For example, in your query form type  key*  to find  key ,  keying ,  keyhole ,  keyboard , and so on. Using ? matches any single character.    Use ** to search for all forms of a word.  For example, in the form type  sink**  to find  sink, sinks, sinking ,  sank , and  sunk . This is especially useful if you might be looking for a word in singular or plural form.    Use  NEAR  to search for words close to each other. For example, both of these queries,  penny and candy  and  penny near candy , look for the words  penny  and  candy  on the same page. But with  NEAR , the returned pages are ranked in order of proximity: The closer together the words are, the higher the rank of that page.     Use AND NOT to refine your queries to exclude certain text from your search.  For example, if you want to find all instances of  apple  but not  tree , enter  apple AND NOT tree      Use OR to find all instances of either one word or another . For example  penny OR candy  finds all pages that mention  penny  or  candy  or both.     Put quotation marks around keywords if you want them to be taken literally . For instance, if you type  ""penny near candy"" , the search will literally be for the complete phrase  penny near candy . But if you type the same query without the quotation marks it would return all documents with the words  penny  and  candy  ranked by order of proximity.       These hints will get you started, but for more complex queries and more examples, see the  Query Language  page."
GX006-48-0410652	"FRA document Web       Introduction    To search using FRA document Web, enter a search request in the space provided  and click the  Search  button.   FRA document Web will return a list  of the documents that match your request.  To view a document in the list,  click on the link.  After you have opened a document in FRA document Web, you  can use the  Next Hit  and  Prev Hit  buttons on the button bar to  navigate from hit to hit.  (For PDF files, use the hit navigation buttons  in the Adobe Reader toolbar, not the FRA document Web buttons.  Click  here   for more information.)     The search form may include one or more checkboxes for search features.    Search Requests Overview    FRA document supports two types of search requests. A  natural language search  is any sequence of text, like a sentence or a question. After a natural language search, FRA document sorts retrieved documents by their relevance to your search request.    A boolean search request consists of a group of  words  or  phrases  linked by connectors such as  and  and  or  that indicate the relationship between them. Examples:          apple  and  pear       Both words must be present           apple  or  pear       Either word can be present          apple  w/5  pear       Apple  must occur within 5 words of  pear          apple  not  w/5 pear       Apple  must not occur within 5 words of  pear            apple  and not  pear       Only  apple  must be present           name  contains  smith       The field  name  must contain  smith            If you use more than one connector, you should use parentheses to indicate precisely what you want to search for. For example,  apple and pear or orange juice  could mean  (apple and pear) or orange , or it could mean  apple and (pear or orange) .     Noise words, such as  if  and  the,  are ignored in searches.    Search terms may include the following special characters:           ?       Matches  any single character. Example:  appl?  matches  apply  or  apple.          *       Matches  any number of characters. Example:  appl*  matches  application          ~       Stemming . Example:  apply~  matches  apply ,  applies ,  applied .          %       Fuzzy search . Example:  ba%nana  matches  banana ,  bananna .          #       Phonic search . Example:  #smith  matches  smith ,  smythe .          &       Synonym search . Example:  fast&  matches  quick .          ~~       Numeric range . Example:  12~~24  matches  18 .          :       Variable term weighting . Example:  apple:4 w/5 pear:1            Words and Phrases    You do not need to use any special punctuation or commands to search for a phrase. Simply enter the phrase the way it ordinarily appears. You can use a phrase anywhere in a search request. Example:       apple w/5 fruit salad       If a phrase contains a noise word, FRA document will skip over the noise word when searching for it. For example, a search for  statue of liberty  would retrieve any document containing the word  statue , any intervening word, and the word  liberty .    Punctuation inside of a search word is treated as a space. Thus,  can't  would be treated as a phrase consisting of two words:  can  and  t.   1843(c)(8)(ii)  would become  1843 c 8 ii  (four words).    Wildcards (* and ?)    A search word can contain the wildcard characters  *  and  ? . A  ?  in a word matches any single character, and a  *  matches any number of characters. The wildcard characters can be in any position in a word. For example:             appl*  would match apple, application, etc.    *cipl*  would match principle, participle, etc.    appl?  would match apply and apple but not apples.    ap*ed  would match applied, approved, etc.        Use of the  *  wildcard character near the beginning of a word will slow searches somewhat.     Natural Language Searching    A natural language search request is any combination of words, phrases, or sentences. After a natural language search, FRA document sorts retrieved documents by their relevance to your search request. Weighting of retrieved documents takes into account: the number of documents each word in your search request appears in (the more documents a word appears in, the less useful it is in distinguishing relevant from irrelevant documents); the number of times each word in the request appears in the documents; and the density of hits in each document. Noise words and search connectors like NOT and OR are ignored.    Synonym Searching    Synonym searching finds synonyms of a word in a search request. For example, a search for  fast  would also find  quick.  You can enable synonym searching for all words in a request or you can enable synonym searching selectively by adding the & character after certain words in a request. Example:  fast& w/5 search.     The effect of a synonym search depends on the type of synonym expansion requested on the search form. FRA document can expand synonyms using only user-defined synonym sets, using synonyms from FRA document's built-in thesaurus, or using synonyms and related words (such as antonyms, related categories, etc.) from FRA document's built-in thesaurus.    Fuzzy Searching    Fuzzy searching will find a word even if it is misspelled. For example, a fuzzy search for  apple  will find  appple . Fuzzy searching can be useful when you are searching text that may contain typographical errors, or for text that has been scanned using optical character recognition (OCR). There are two ways to add fuzziness to searches:         Check the ""Fuzzy searching"" box to enable fuzziness for all of the words in your search request. You can adjust the level of  fuzziness  from 1 to 10.    You can also add fuzziness selectively using the % character. The number of % characters you add determines the number of differences FRA document will ignore when searching for a word. The position of the % characters determines how many letters at the start of the word have to match exactly. Examples:                 ba%nana   Word must begin with  ba  and have at most one difference between it and  banana.      b%%anana   Word must begin with  b  and have at most two differences between it and  banana.           Phonic Searching    Phonic searching looks for a word that sounds like the word you are searching for and begins with the same letter. For example, a phonic search for  Smith  will also find  Smithe  and  Smythe .     To ask FRA document to search for a word phonically, put a # in front of the word in your search request. Examples:  #smith, #johnson    You can also check the  Phonic searching  box in the search form to enable phonic searching for all words in your search request. Phonic searching is somewhat slower than other types of searching and tends to make searches over-inclusive, so it is usually better to use the # symbol to do phonic searches selectively.     Stemming    Stemming extends a search to cover grammatical variations on a word. For example, a search for  fish  would also find  fishing . A search for  applied  would also find  applying ,  applies , and  apply . There are two ways to add stemming to your searches:            Check the  Stemming  box in the search form to enable stemming for all of the words in your search request. Stemming does not slow searches noticeably and is almost always helpful in making sure you find what you want.    If you want to add stemming selectively, add a ~ at the end of words that you want stemmed in a search. Example:  apply~         Variable Term Weighting    When FRA document sorts search results after a search, by default all words in a request count equally in counting hits. However, you can change this by specifying the relative weights for each term in your search request, like this:      apple:5 and pear:1      This request would retrieve the same documents as apple and pear but, FRA document would weight apple five times as heavily as pear when sorting the results.    In a natural language search, FRA document automatically weights terms based on an analysis of their distribution in your documents. If you provide specific term weights in a natural language search, these weights will override the weights FRA document would otherwise assign.    Field Searching    When you index a database or other file containing fields, FRA document saves the field information so that you can perform searches limited to a particular field. For example, suppose that you indexed an Access database with a  Name  field and a  Description  field. You could search for  apple  in the  Name  field like this:     name contains apple    Field searches can be combined using  and ,  or , and  not ,  like this:     (City contains (portland or Seattle)) and (Address contains  (Washington))    The parenthesis are necessary to ensure that FRA document interprets  the search request correctly.    Some file formats such as XML support nesting of fields.  Example:    <record>        <name>John  Smith</name>        <address>              <street>123  Oak Street</street>              <city>Middleton</city>              ...    In FRA document, a search of a field includes any fields that are  nested inside of the field, so the XML file above would be retrieved in a search  for any of the following:    record contains oak   address contains oak   street contains oak    To specify a specific subfield of a field, use / to separate the  field names, like this:    record/address contains oak   address/street contains oak   record/address/street contains oak    Put a / at the front of the field name to specify that it cannot  be a sub-field of another field:    /record/name contains Smith   /name contains Smith    The second search request above would  not  match the XML  example because, while it contains a ""name"" field, the name field is a  sub-field of the record-field. A search for /name specifies a ""name""  field at the top of the field hierarchy.    Finally, you can use // to specify any number of unspecified  intervening fields, like this:    /record//city contains Middleton    AND Connector    Use the AND connector in a search request to connect two expressions, both of which must be found in any document retrieved. For example:         apple pie and poached pear  would retrieve any document that contained both phrases.    (apple or banana) and (pear w/5 grape)  would retrieve any document that (1) contained either  apple  OR  banana , AND (2) contained  pear  within 5 words of  grape .         OR Connector    Use the OR connector in a search request to connect two expressions, at least one of which must be found in any document retrieved. For example,  apple pie or poached pear  would retrieve any document that contained  apple pie ,  poached pear , or both.    W/N Connector    Use the W/N connector in a search request to specify that one word or phrase must occur within N words of the other. For example,  apple w/5 pear  would retrieve any document that contained  apple  within 5 words of  pear . The following are examples of search requests using W/N:    (apple or pear) w/5 banana   (apple w/5 banana) w/10 pear   (apple and banana) w/10 pear    Some types of complex expressions using the W/N connector will produce ambiguous results and should not be used. The following are examples of ambiguous search requests:         (apple and banana) w/10 (pear and grape)   (apple w/10 banana) w/10 (pear and grape)         In general, at least one of the two expressions connected by W/N must be a single word or phrase or a group of words and phrases connected by OR. Example:        (apple and banana) w/10 (pear or grape)   (apple and banana) w/10 orange tree        FRA document uses two built in search words to mark the beginning and end of a file:  xfirstword  and  xlastword . The terms are useful if you want to limit a search to the beginning or end of a file. For example,  apple w/10 xlastword  would search for  apple  within 10 words of the end of a document.     NOT and NOT W/N    Use NOT in front of any search expression to reverse its meaning. This allows you to exclude documents from a search. Example:        apple sauce and not pear         NOT standing alone can be the start of a search request. For example,  not pear  would retrieve all documents that did not contain  pear .     If NOT is not the first connector in a request, you need to use either AND or OR with NOT:        apple or not pear   not (apple w/5 pear)        The NOT W/ (""not within"") operator allows you to search for a word or phrase not in association with another word or phrase. Example:        apple not w/20 pear         Unlike the W/ operator, NOT W/ is not symmetrical. That is,  apple not w/20 pear  is not the same as pear not w/20 apple. In the  apple not w/20 pear  request, FRA document searches for  apple  and excludes cases where  apple  is too close to  pear . In the  pear not w/20 apple  request, FRA document searches for  pear  and excludes cases where  pear  is too close to  apple .    Numeric Range Searching    A numeric range search is a search for any numbers that fall within a range. To add a numeric range component to a search request, enter the upper and lower bounds of the search separated by ~~ like this:        apple w/5 12~~17        This request would find any document containing  apple  within 5 words of a number between  12  and  17 .    Numeric range searches only work with positive integers.   A numeric range search includes the upper and lower bounds (so  12  and  17  would be retrieved in the above example).     For purposes of numeric range searching, decimal points and commas are treated as spaces and minus signs are ignored. For example,  -123,456.78  would be interpreted as:  123 456 78  (three numbers). Using alphabet customization, the interpretation of punctuation characters can be changed. For example, if you change the comma and period from  space  to  ignore , then  123,456.78  would be interpreted as  12345678 ."
GX005-61-13946321	"Global Search Help      This search provides you with access to a multitude of ABE and family literacy-focused webpages from 52 state agencies and numerous major national and international organizations. The  LINCS  global search is a very powerful tool. Just follow the instructions.        How do I begin my search?   What are the best ways to use the search program?   How do I interpret the search results?   Now that I have my results, how can I refine my search?   I'm getting too many junk or nonsense results, how can I get fewer more relevant results?   I'm getting too few results, how can I find more documents?   A note about ""stop"" or ""noise"" words.      Q:   How do I begin my search?   A:  The search page includes the following sections (please refer to illustration below):    Search for  - The box for you to enter your query   Search sites  - The right column, allowing you to search on selected, comprehensive adult education and family literacy sites. (Comprehensive list of national, regional, and international sites are included.) The radio button next to each site allows you to select a site to be searched. The default is to search all sites listed. Scroll further down the search page to view descriptions of the sites.   Search Tips  - Basic information providing the most common search tips.         Back to Top   Q:  What are the best ways to use the search program?   A:  Your search can be as simple or as complex as you need it to be. You have the following three options:    Ask a question:  In the ""Search for"" box, you can type a question in plain English, i.e.,  Where can I find resources for integrating technology into teaching and learning?  The search program will search for   resources  AND  integrating  AND  technology  AND  teaching   AND  learning.     Locate a phrase:  In the ""Search for"" box, type in a phrase, using  quotation marks , i.e.,  ""welfare to work""  This will locate resources containing your phrase or those adjacent words in that specific order.     Locate a term or a few terms:   Think of a term or few terms that best describe what you are trying to locate, i.e. adult, education, policy.   If you type and search for   adult education policy  any documents containing  ""adult""  or  ""education""  or  ""policy""  or  ""adult and education""  or  ""adult and policy""  or  ""education and adult""  or  ""adult and education and policy""  will be found.      If you type your terms separated with  "" +""  (there is a space before the +, but not after) as   adult +education  you will find documents that have BOTH terms. The  ""+"" (plus)  symbol in front of a search item means that the answer MUST INCLUDE that item, and therefore reduces the number of documents retrieved.      If you type your terms separated with  ""  -""  (there is a space before the -, but not after) as  adult -education  you will find documents that have ""adult"" but do NOT include the term ""education"". Using  ""-"" (minus)  means the answer should EXCLUDE references to that item.      Putting a  ""-"" (hyphen)   between words will also force order and one word proximity (there is no space before or after the hyphen), i.e.,  computer-aided-instruction  will find documents that have the three terms in the instruction order, next to each other. This is a very powerful search tool in locating your request.     Using "" @N"" - The  "" @""  (there is a space before the @ sign) followed by a number indicates how many intersections to locate of the terms in your query. This may be confusing at first, but it is very powerful. See the following example:  ESL instruction training @1  will find   ESL with instruction , or,  ESL with training , or,  training with instruction .          Note:  Only the  ""+""  and  ""-""  operations are valid with a relevance rank search (See  search results )     Back to Top      Q:   How do I interpret the search results?   A:  When the query is submitted for the ""Search"", the resulting page will provide you with the resulting number of hits (top middle column), and for each document found, the document title, abstract, the match quality graph, ""Find Similar"", and ""Show Matches"". Additionally, the left bar on the page provides the terms you used for your query and capability of refining your search through changing the terms used or further tailoring your search through the ""Word Forms"" option or the ""Proximity"" option.   The main body of the search results page contains the following items (numbers point to labels on following illustration):       Document title  clicking on this will take you  to the original document       Abstract  gives the first few hundred characters of the document         Result number  When a query is submitted, the top of the resulting page will tell the number of documents found. Up to 10 matching documents can be displayed per page. If there are more than 10 documents, links at both the top and bottom of the list will allow you to view the next 10 in sequence.        Match quality graph   only shown if relevancy ranking was used. Documents are ordered from best to worst match based on the match quality. The bar graph display indicates the overall quality of the match.        Find Similar  will find documents similar to this one. The  Find Similar  link will find documents that are similar to the corresponding result. It does this by reading the original document to ascertain its main subject matter, and then conducting a relevance-ranked search for those subjects.       Show Matches  will show the matches and other information about that document. Match information gives the context of your search terms within the matching document. Matching words will be shown like ""Adult Education."" Clicking on any hyperlink term will take you to the next matching term. A summary at the top of the in-context view shows information about the document including the time it was last indexed by the search program.         Next  goes to next group of matching documents.         Back to Top   Q:   Now that I have my results, how can I refine my search?   A:  The  Search for  box on the top left (provides the terms you used for your query) - The ""Search For"" box also allows you to further tailor your query to get to your desired answers, or to submit a completely new query without having to navigate back to the original input form. You can add more terms or change terms (as well as editing) in the ""Search for"" box.       Word Forms  options give you control over how many variations of your query terms will be sought in your search.      Exact  is the default, and only exact matches of the word will be allowed.      Plural & possessives  - Plural and possessive forms will be found. (s, es, 's)      Any word forms  As many word forms as can be derived will be located.   Example using "" program "":  EXACT:  program PLURAL: (above)  + programs program's ANY: (above)  + programming programmatic programmed programmer programmable       Proximity  options give the ability to locate answers with greater precision. The search input form gives you several options to control the search proximity:      sentence : Query items should all reside within the instruction line.      paragraph : within the instruction paragraph or text block.      page  (default): All items must occur within HTML document.      Back to Top   Q:   I'm getting too many junk or nonsense results, how can I get fewer more relevant results?   A:  Try any of the following:   Add some more relevant words to your search using ""+""     Decrease the range of the  Proximity  control to  paragraph  or  sentence .     Make sure  Word Forms  is set on  Exact      Look at the  Show Matches  information and see if there is a term there that is closer to what you are looking for.     Use the ""-"" symbol before a word to remove from search     Try hyphenating a phrase together.      Back to Top   Q:  I'm getting too few results, how can I find more documents?   A:  Try any of the following:   Remove some words from your search     Examine spelling     Set  Proximity  control to  page       Back to Top   A note about ""stop"" or ""noise"" words:  A stop word (also called a noise word) is a commonly used word that a search engine has been programmed to ignore. These include words like ""a"", ""and"" and ""for"". ( A complete list of stop words can be found here ). These words occur frequently in searches and are deemed irrelevant by the global search engine in both building an index for searching and for retrieving results. This helps to speed up the process of searching for results to a query.     Back to Top"
GX004-09-14324366	"iPlanet Web Server 6.0 User's Guide for Search                                                                         Using Search                 The search function provides you with the ability to search the file information and contents of documents on a remote server. The server indexes the files so that you can use your web browser to view the documents that are found for your search.           This chapter discusses:                    Preparing Data for Searching                Performing a Search: The Basics                Using the Query Operators                       Preparing Data for Searching             To enable search capability on your server, the server administrator begins by identifying the documents that you want to be able to search. Before you can execute searches, you need a database of searchable data against which you can target your searches. Your server administrator has to create a document information database, called a  collection ,  that indexes and stores the content and file properties for each document to be searched.           Collections contain the following information about their documents:                     Format                Language                 Searchable attributes                Number of documents in the collection                Status of the collection                Brief description of the collection          For more details, see the section "" Displaying Collection Contents .""          There are two types of searchable attributes:                    Collection Attributes                META-Tagged Attributes                     Collection Attributes              Certain file formats have a default set of attributes that are indexed for files of that type, as shown in  Table 1 . Note that ASCII files have no default attributes.                      Table  1    The default attributes indexed for each file format                                   File format                         Attribute                        Type                        Description                                ASCII                     -                     -                     -                             HTML             Title                        text                     The user-defined title of the file.                                         SourceType                        text                     The original format of the document.                             NEWS             From                         text                     The source userID of the news item.                                           Subject                         text                     The text from the subject field of the news item.                                          Keywords                        text                     Any keywords defined for the news item                                         Date                        date                     The date the news item was created.                             EMAIL             From                         text                     The source userID of the email.                                           To                         text                     The destination userID of the email.                                         Subject                         text                     The text from the email's subject field.                                          Date                         date                     The date the email was created.                             PDF              InstanceID                         text                     An internal ID number.                                           PermanentID                         text                     An internal ID number.                                           NumPages                         integer                     The number of pages in the document.                                           DirID                         text                     The directory where the PDF file exists.                                         FTS_ModificationDate                        date                     The document's last modification date.                                         FTS_CreationDate                         date                     The document's creation date.                                         WXEVersion                         integer                     The version of Adobe Word Finder used to extract the text from the PDF document.                                           FileName                         text                     The Adobe filename specification.                                           FTS_Title                         text                     The document's title.                                           FTS_Subject                         text                     The document's subject.                                           FTS_Author                         text                     The document's author.                                           FTS_Creator                         text                     The document's creator.                                           FTS_Producer                         text                     The document's producer.                                         FTS_Keywords                         text                     The document's keywords.                                         PageMap                         text                     The page map, describing the word instances for the page.                                    META-Tagged Attributes              By default, HTML collections only have  Title  and  SourceType  attributes, but they can be set up to also permit searching and sorting by up to 30 file attributes tagged with the HTML  <META>  tag.           For example, a document could have these META-tagged attributes:          <META NAME=""Writer"" CONTENT=""J. S. Smith""> <META NAME=""PubDate"" CONTENT=""07-24-00""> <META NAME=""Product"" CONTENT=""Communicator"">          If this document had been indexed with its META tags extracted, you could search it for specific values in the writer, publication date, or product fields. For example, you could enter this query:          Writer <contains> Smith  or  PubDate > 1/1/00 .                          Note                        Any attribute values in META-tagged fields are text strings only, which means that dates and numbers are sorted as text, not as dates or numbers. Also, illegal HTML characters in a META-tagged attribute are replaced with a hyphen.                                     Performing a Search: The Basics             Users are primarily concerned with querying the data in the search collections and getting a list of documents in return. The default installation of the iPlanet Web server includes a set of search query and result pages to allow users a quick and easy way of doing searches.          You can search through server documents for a specific word or attribute value, obtaining a set of search results that list all documents that match the query. You can then select a document from the list to browse it in its entirety. This provides easy access to server content.          There are four parts to text searching:                    Making a query —you enter your search criteria.                Displaying search results —the server displays a list of the documents that match your criteria.                Viewing a document —you can view a specific highlighted document from the search results list.                Viewing the contents of a document information collection —you can look at the information that is maintained for each of your collections.                      Creating a Search Query              There are three default search query pages:                     Standard form                Advanced HTML form                 Java-based guided applet          On the standard search form, you select a collection to search against and enter in a word or phrase to search for using the query language operators.           On the advanced HTML form, you have the additional options of selecting multiple collections to search through, establishing a sort sequence for the results, and defining how many documents are to be displayed on a page at a time (clicking the Prev and Next arrows moves you through the pages of results).           In the guided Java-based search applet, the applet uses several drop-down lists to guide you through constructing a query. You must have Java enabled for your browser to use this applet.                       The Standard Search Query Form              You can perform two types of searches from the standard search query form. To search the server collections, follow these steps:                    Enter this URL in the location field in your web browser:                       http:// your_server / search                       Figure  1    Standard Search Query Page                        In the search query page that appears, choose the collection you want to search from the drop-down list in the ""Search in"" field.                 Enter the word or phrase for your search query in the For field.                        You can create complex queries by combining operators.  See ""Query Operators: a Reference""  for details about the search operators.                     Click the Search button to execute your query.                (Optional) Search the world wide web instead of your individual server by entering the word or phrase in the ""Search the Web"" box and clicking Search.                       The Advanced HTML Search Query Page              You can choose to use the advanced HTML search form, which helps you construct the query. This form is especially useful if you want to search through more than one collection or produce results sorted by a specific attribute value.          To access advanced HTML search through the standard search query page, follow these steps:                    Go to the standard search query page by typing this URL in the location field in your web browser:                       http:// your_server /search                     Disable Java for your browser. To do this, use the Advanced option preferences menu command.                 Click Guided Search on the standard search form to display the advanced HTML query page.                  Figure  2    Advanced HTML Search Query Page                        In the For field, enter in the word or phrase you want to search for.                        You can create complex queries by combining operators.  See ""Query Operators: a Reference""  for details about the search operators.                     (Optional) Enter one or more attributes to sort the results by.                        The default is an ascending sort order, but you can indicate a descending sort order with a minus, as in   -Pubdate.  ( See ""Sorts the Results""  for more information about sorting).                     (Optional) Use the Prev and Next buttons to access additional pages of documents if there are too many to fit on a page at once.                       Depending on how many fields are listed for each document in the search results page or how many you want to see at a time, you can expand or limit the number of matching documents you want the search to return at a time.                      Use the drop-down list in the Search In field to choose the collection you want to search through.                        You can select more than one collection by holding down the Control key as you click on another collection. All collections in a query must be in the same language.                     Click the Search button to execute your query.                       The Guided Search Applet              You can choose to use the Java-based guided search interface, which helps you construct the query. This is especially useful if you want to build a query that has several parts, say searching for a word in the documents' content as well as a specific attribute value.                          Note                        Make sure Java is enabled for your browser. To do this, use the Languages option preferences menu command.                        To access guided search from the standard search query page, follow these steps:                    Obtain the standard search query page by using this URL:                       http:// your_server /search                     Click Guided Search on the standard search page to display the guided Java-based query page.                  Figure  3    Guided Search Query Applet                        Choose the collection you want to search through from the drop-down list in the Search In field.                Use the For drop-down list to select the type of element you wish to search for.                       In this example, choose Words.                     In the blank text field, enter the word you want to search for.                        See ""Query Operators: a Reference""  for details about the search operators.                     Click Add Line to add the first part of the query.                        The word appears in the large text display box at the bottom of the form.                     Add to your query by choosing another element from the drop-down list.                        In this example, choose Attribute.                    A new drop-down list appears on the right side of the form listing all attributes that are available for the chosen collection.                      Choose the attribute you want to search against.                Choose a query operator (Contains, Starts, Ends, Matches, Has a substring) or logical operator  (=, <, >, <=, >=)  for your query from the drop-down list above the text input field.                In the blank text field, enter in the attribute value you want to search for.                Click Add Line to add another line for your query.                        You can click Undo Line to remove the last line you added or Clear to remove the entire query.                     Click the Search button to execute your query.                     Getting Search Results              There are two standard types of search results:                     A list of all documents that match the search criteria                 Text of a single document that you selected from the list of matching documents          The web server performs four functions when returning the results of your search query:                    Checks Access Permission                Lists Matched Documents                Sorts the Results                Displays a Document                       Checks Access Permission               Which documents are returned for your query depends on the access control rules set for each of the documents and collections involved. The server checks access control rules whenever you:                    Search on any collection, singly or as part of a multi-collection search                Click on the URL for a document listed as part of the search results                Click on a link displaying the document with the search query word or phrase in highlighted text.           If the server encounters an access control rule that restricts your access to a document that matches your query, that document is not listed in search results. If you do not have permission to view a document listed in the search results, the server does not display it.                       Lists Matched Documents              In the default installation of iPlanet Web Server, when you execute a search from either the simple or advanced search query pages, you obtain a list of documents that match your search criteria. The list gives some standard information about each file, depending on the collection's format. For example, the default results page for email collections display:                    Subject                To                From                Date                  Figure  4    Sample Search Results               The kind of file format in the collection indicates which default attributes are available for searching.  See ""Collection Attributes""  and  Table 1  for information about the attributes for each format.           For entries resulting from a search that checks for comparative proximity of words to each other or for the exactness of the match, the file's ranking can be provided by showing a score.           If there are more matching documents than can fit on a page, click Next to see the next batch. You can always execute a new search by entering new query data and clicking Search.                       Sorts the Results              By default, or if you don't enter anything in the Sort By field on the advanced HTML query page, all documents matching the search are output according to their relevance ranking (for queries that consider this) or their position in the server file database (for other queries).          If you enter an attribute name in the Sort By field, the documents are displayed in an ascending sort sequence. You can also list the documents in a descending sort sequence by adding a minus sign  (-)  prefix to the attribute, as in  -keywords  or  -title . You can do a multiple sort, by typing in more than one field, as in  Author,-PubDate .            In a short query, sort order usually isn't critical, but in queries that result in a great many matches, you may want to set a sort value in order to obtain useful search results. However, using a special sort sequence may impact the search's performance.                           Note                        Attribute values in META-tagged fields are text strings, which means that dates and numbers are sorted as text, not as dates or numbers.                                      Displays a Document              In the default installation of iPlanet Web Server, when you obtain a list of the documents that match your search criteria, you can select a single document to display in your web browser. You can choose to have the browser can display the original document, or to display the document with your search query word or phrase highlighted with color, boldface, or blinking.          To view the original document, click on the hypertext link containing the document's URL. For documents that have been converted into HTML, the URL points you to the original document. Clicking this link opens an external viewer to display the document in its original format.          To view a highlighted document, click on the highlighted area next to the document's entry in the search results.                      Displaying Collection Contents              You can display the contents of your collection database to see which attributes are set for each collection. Your server administrator may have defined some collections as non-displayable, in which case they are not included in the output. The collection contents typically include these items:                    Collection name, label, and description                Collection format                Number of attributes in the collection and a list of their names                Number of documents in the collection                Collection size and status                Language and character set                Input and output date formats          To display your collection database contents, enter this line in the web browser's URL location field (be sure not to include any spaces):         http:// your_server /search?NS-search-page=c                       Using the Query Operators             To perform an effective search, you need to know how to use the query operators. You can only do Boolean searches, so all the subsequent information is based on Boolean search rules.                           Note                        The query language is not case-sensitive. The examples use uppercase for clarity only.                         The search engine interprets the search query based on a set of syntax rules. For example, by entering the word ` region' , the actual word ` region'  and all its stemmed variations (such as ` regions'  and ` regional' ) are found. The search results are ranked for importance, meaning how close the matched word comes to the originally input search criteria. In the example above, ` region'  would rank higher than any of the stemmed variants.           Not all queries rank their results. For example, queries that check whether a given string matches the value in a field cannot perform a comparison: either the string matches the value or it doesn't. The same is true for checking whether a string is contained in a field, or begins or ends a field.           This section discusses these topics:                    Default Assumptions                Search Rules                Determining Which Operators to Use                Query Operators: a Reference                Using Wildcards                     Default Assumptions              The search query language has some implicit defaults and assumptions that dictate how it interprets your input. In some cases, you can circumvent the defaults, but here is how the search engine decides what you want as the search results:          <STEM> —Search finds all documents that contain any stemmed variant of the search word or phrase. The search engine looks at the meaning of the word, not just its spelling. For example, if you want to search on `plan', the results would include documents that contain `planning' and `plans', but not those that contain `plane' or `planet'.          <MANY> —Search considers how often the search word or phrase appear in the found documents and ranks the results for frequency (or  relevancy ).           <PHRASE> —Search considers words separated by spaces to be part of a phrase. For example, `Monterey otter' is interpreted as a phrase and both must be present and together to be found. Such a search would not find documents containing `sea otter' or `Monterey Bay' .                          Note                        In any case where it's not clear that two words are to be considered as a phrase, you can use parentheses for clarity. For example, <PHRASE>  (rise ""and"" fall) .                                OR —Search considers each word or phrase in the query separated by a comma to be optional, although at least one must be present. In effect, this is an implicit OR operation. For example, `Monterey, otter' is interpreted as searching for documents that contain either `Monterey' or `otter'. Angle brackets are not required for OR.                     Search Rules              To create complex searches, you can combine query operators, manipulate the query syntax, and include wildcard characters.                       Angle Brackets              With the exception of the  AND ,  OR ,  NOT , and the date and numeric comparison operators, you need to enclose query operators in angle brackets, as in  <CONTAINS>  and   <WILDCARD> .                       Combining Operators              You can combine several query operators into a single query to obtain precise results. For example, you can input the following query to limit your search to those documents that have' Bay' and `Monterey', but to exclude those that mention `Aquarium'.         Monterey AND Bay NOT <CONTAINS> Aquarium            You can achieve even greater precision by including some implicit phrases, as in the following query that finds documents that refer to the `Monterey Bay Aquarium' by its full name and also mentions `otters', but does not refer to `shark':         Monterey Bay Aquarium AND otter AND NOT shark                        Using Query Operators as Search Words              You can use any of the query operators as a search word, but you must enclose the word in quotation marks. For example, you could search for documents about the `ebb and flow' of the tides with the following query:         <CONTAINS> ebb ""and"" flow                      Canceling Stemming              You can cancel the implicit stemming by using quotation marks around a word. For example, you can use a query such as this:         ""plan""            This search only results in documents that contain the exact word `plan'. It ignores documents with `plans' or `planning'.                       Modifying Operators              You can use AND, OR, and NOT to modify other operators. For example, you may want to exclude documents with titles that contain the phrase `theme park'. A query such as this would solve this problem:         Title NOT <CONTAINS> theme park                      Determining Which Operators to Use               Use the following reference to help determine which operators to use. Note that the query language is not case-sensitive, so  <starts>  and  <STARTS>  are equivalent. This document uses uppercase for clarity only.                     Table  2    Deciding Which Operator to Use                                   Type of Search                       Valid Operators                       Examples                               Finding documents by date or numeric value comparison.                     is equal to  (=) , greater than  (> ), greater than or equal to  (>=) , less than  (<) , less than or equal to  (<=)                     DATE >= 06-30-99             Finds documents created on or after June 30, 1999                             Finding words or phrases in specific document fields or in specific locations in the field.                     <STARTS>, <CONTAINS>, <ENDS>, is equal to (=)                     Title <STARTS> Help               Finds documents with titles that start with `Help'                             Finding two or more words in a document.                     AND, <NEAR/1>               specifications AND review                  Finds documents that contain both `specifications' and `review '                                    Query Operators: a Reference              The following table describes some commonly used operators and provides examples of how to use each one. All are relevance ranked except where explicitly noted.                     Table  3    Query Language Operators                                   Operator                       Description                       Examples                               AND                     Adds mandatory criteria to the search. Finds documents that have all of the specified words.                     Antarctica AND mountain climb             Finds only documents containing both `Antarctica' and `mountain climb' plus all the stemmed variants, such as `mountain climbing'.                             <CONTAINS>                     Finds documents containing the specified words in a document field. The words must be in the exact same sequential and contiguous order.             You can use wildcards. Only alphanumeric values.             Does not rank documents for relevance.                     Title <CONTAINS> higher profit             Finds documents containing the phrase  `higher profit'  in the title. Ignores documents with  `profits higher'  in the title.                             <ENDS>                     Finds documents in which a document field ends with a certain string of characters.             Does not rank documents for relevance.                     Title <ENDS> draft             Finds documents with titles ending in ` draft' .                             equals  (=)                     Finds documents in which a document field matches a specific date or numeric value.                     Created = 6-30-99             Finds documents created on June 30, 1999.                             greater than  (>)                     Finds documents in which a document field is greater than a specific date or numeric value.                     Created > 6-30-99             Finds documents created after June 30, 1999.                             greater than or equal to  (>=)                     Finds documents in which a document field is greater than or equal to a specific date or numeric value.                     Created >= 6-30-99             Finds documents created on or after June 30, 1999.                             less than  (<)                     Finds documents in which a document field is less than a specific date or numeric value.                     Created < 6-30-99             Finds documents created before June 30, 1999.                             less than or equal to  (<=)                     Finds documents in which a document field is less than or equal to a specific date or numeric value.                     Created <= 6-30-99             Finds documents created on or before June 30, 1999.                             <MATCHES>                     Finds documents in which a string in a document field matches the character string you specify.             Ignores documents that contain partial matches.             Does not rank documents for relevance.                     <MATCHES> employee             Finds documents containing  `employee'  or any of its stemmed variants such as ` employees' .                             <NEAR>                     Finds documents that contain the specified words. The closer the terms are to each other in the document, the higher the document's score.                     stock <NEAR> purchase             Finds any document containing both `stock' and `purchase', but gives a higher score to a document that has `stock purchase' than to one that has `purchase supplies' and `stock up'.                             <NEAR/N>                     Finds documents in which two or more specified words are within N number of words from each other. N can be an integer up to 1000. Also ranks the documents for relevance based on the words' proximity to each other.                     stock <NEAR/1> purchase             Finds documents containing the phrases `stock purchase' and `purchase stock'.             Ignores documents containing phrases like `purchase supplies' and `stock up' because `stock' and `purchase' do not appear next to each other.             When N is 2 or greater, finds documents that contain the words within the range and gives a higher score for documents which have the words closer together.                             NOT                     Finds documents that do not contain a specific word or phrase.             You can use  NOT  to modify the  OR  or the  AND  operator.                     surf AND NOT beach             Finds documents containing the word `surf' but not the word `beach'.                             OR                     Adds optional criteria to the search. Finds any document that contains at least one of the search values.                     apples OR oranges             Finds documents containing either `apples' or `oranges'.                             <PHRASE>                     Finds documents that contain the specified phrase. A phrase is a grouping of two or more words that occur in a specific order.                     <PHRASE> (rise ""and"" fall)              Finds documents that include the entire phrase `rise and fall'. The `and' is in quotes to force the search to interpret it as a literal, not as an operator.                             <STARTS>                     Finds documents in which a document field starts with a certain string of characters.             Does not rank documents for relevance.                     Title <STARTS> Corp             Finds documents with titles starting with `Corp', such as `Corporate' and `Corporation'.                             <STEM>               (English only)                     Finds documents that contain the specified word and its variants.                     <STEM> plan             Finds documents that contain `plan', `plans', `planned', `planning', and other variants with the same meaning stem. Ignores similarly spelled words such as `planet' and `plane' that don't come from the same stem.                             <SUBSTRING>                     Finds documents in which part or all of a string in a document field matches the character string you specify.             Similar to   <MATCHES> , but can match on a partial string.             Does not work with wildcards.             Does not rank documents for relevance.                     <SUBSTRING> employ             Finds documents that can match on all or part of `employ', so it can succeed with `ploy'.              This works with literals only. If you input web*, the asterisk does not work as a wildcard, so the search succeeds only with the exact ""web*"" string.                              <WILDCARD>                     Finds documents that contain the wildcard characters in the search string. You can use this to get words that have some similar spellings but which would not be found by stemming the word.             Some characters, such as  *  and  ? , automatically indicate a wildcard-based search, so you don't have to include the word  <WILDCARD> .                     <WILDCARD> plan*             Finds documents that contain `plan', `plane', and `planet' as well as any word that begins with `plan', such as `planned', `plans', and `planetopolis'.             See the next section for more details and examples.                             <WORD>                     Finds documents that contain the specified word.                     <WORD> theme             Finds documents that contain `theme', `thematic', `themes', and other words that stem from `theme'.                                    Using Wildcards               You can use wildcards to obtain special results. For example, you can find documents that contain words that have similar spellings but are not stemmed variants. For example,  `plan ' stems into  `plans ' and  `planning ', but not  `plane ' or ` planet' . With wildcards, you can find all of these words.          Some characters, such as  *  and  ? , automatically indicate a wildcard-based search and do not require you to use the  <WILDCARD> operator as part of the expression.                     Table  4    Wildcard Operators                                   Character                       Description                               *                     Specifies 0 or more alphanumeric characters. For example,  air*  finds documents that contain ` air' ,  `airline' , and ` airhead' .              Cannot use this wildcard as the first character in an expression.              This wildcard is ignored in a set of  ([ ])  or in an alternative pattern  ({ }) .              With this wildcard, the  <WILDCARD>  operator is implicit.                             ?                     Specifies a single alphanumeric character, although you can use more than one? to indicate multiple characters.  ?at  finds documents that contain ` cat'  and ` hat' , while  ??at  finds documents that contain ` that'  and ` chat' .             This wildcard is ignored in a set of  ([ ])  or in an alternative pattern  ({ }) .             With this wildcard, the  <WILDCARD>  operator is implicit.                             {}                     An alternative pattern that specifies a series of patterns, one for each pattern separated by commas. For example: <WILDCARD> `Chat{s, ting, ty}`   finds documents that contain ` chats' ,  `chatting' , and ` chatty' .             You must enclose the entire string in back quotes and you cannot have any embedded spaces.                             [  ]                     A set that specifies a series of characters that can be used to find a match. For example:  <WILDCARD> `[chp]at`   finds documents that contain ` cat' , ` hat' , and ` pat' .             You must enclose the entire string in back quotes and you cannot have any embedded spaces.                             ^                     Specifies one or more characters to exclude from a set. For example,  <WILDCARD> `C[^io]t`  finds documents that contain ` cat'  and ` cut' , but not ` cot' .             The caret (^) must be the first character after the left bracket.                             -                     Specifies a range of characters in a set. For example,  <WILDCARD> `Ch[a-j]t`  finds documents that contain any four-letter word from "" chat'  to ` chjt' .                                       Wildcards as Literals              Sometimes you may want to search on characters that are normally used as wildcards, such as the  *or?  expression. To use a wildcard as a literal, you must precede it with a backslash. In the case of asterisks, you must use two backslashes. For example, to search on a magazine with a title of Zine***, you would enter:         <WILDCARD>Zine\*\*\*          Several characters have special meaning for the search engine and require you to use back quotes to be interpreted as literals. The special search characters are listed here:                     comma  ,                left and right parentheses  ( )                double quotation mark  ""                backslash  \                at sign  @                left curly brace  {                left bracket  [                back quote  `                            Note                        You can only search on back quotes as literals if your server administrator has set this up. For example, to search for the string  ""a{b"" , you would enter:             <WILDCARD>`a{b`             If you wanted to search on the string  ""c`t"" , which contains a back quote, you would enter:             <WILDCARD>`c``t                                                                                                         Copyright © 2001  Sun Microsystems, Inc.   Some preexisting portions Copyright © 2001 Netscape Communications Corp. All rights reserved.                Last Updated  August 15, 2001                        Copyright © 1997-2001 U.S. District Court - Eastern New York  Last Modified August 20, 2001"
GX109-71-15826658	Interior Library Catalog                                                                                               Information Desk                                                                                                                                 Search the Interior Library Catalog                                                                                  Keyword        Browse        Exact                                                                                                                                     1. Enter the word(s) you want to find.    Keyword  returns records  containing  the word(s) entered.   Browse  returns catalog headings  beginning  with the first word entered.   Exact  returns records that  exactly  match the word(s) entered.    2. Choose a target search field.    Search Everything  targets all indexed fields within a record.   All other choices  target specified fields within a record.                                                                                                   Copyright © 2000 - 2001, Sirsi Corporation                                                                             Interior Library Catalog                                                                                               Information Desk                                                                                                                                                                                                              1. Enter the word(s) you want to find.    Keyword  returns records  containing  the word(s) entered.   Browse  returns catalog headings  beginning  with the first word entered.   Exact  returns records that  exactly  match the word(s) entered.    2. Choose a target search field.    Search Everything  targets all indexed fields within a record.   All other choices  target specified fields within a record.
GX005-74-9822226	"Search          searching                     Quick Tips and Examples             It's easy to search with Inktomi Search.  Just type in a few words or phrases. Try to use discriminating terms that are likely to be found only in the documents you seek.  The more words you give, the better results you'll get.  Here are some examples:     Search by typing words and phrases.    genealogy census records   Inktomi Search will find documents containing as many of these words and phrases as possible, ranked so that the documents most relevant to your query are presented first. Don't worry about missing a document because it doesn't have one of the words in your search -- Inktomi Search returns relevant results even if they don't contain all query terms.     Identify phrases with quotation marks, separate with commas.    genealogy ""census records"", ""passenger lists""    A phrase is entered using double quotation marks, and only matches those words which appear adjacent to each other. Separate multiple phrases or proper names with a comma.     Use UPPER case to indicate exact match.    Archival Research Catalog, ARC   Search terms in lowercase will match words in any case, otherwise, an exact case match is used. For example,  next  will find matches for  Next, next,  and  NeXT , whereas a query for  NeXT  will only match  NeXT .                     topics               Searching                Quick Tips and Examples     Refining a Search     Special Searches     Requiring or Excluding Terms     Meta Tags     Search Syntax Summary            More Services         About Inktomi Search"
